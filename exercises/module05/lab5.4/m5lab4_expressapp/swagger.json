{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "My Express App",
        "description": "API for serving friends information",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [
        {
            "name": "Friends",
            "description": "API friends in the system"
        }
    ],
    "paths": {
        "/friends/": {
            "get": {
                "tags": [
                    "Get friends service"
                ],
                "summary": "Get all the current friends from server",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "This service returns the friends currently stored on the server"
                    }
                }
            },
            "post": {
                "tags": [
                    "Post friend service"
                ],
                "summary": "Add a new friend",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successfully adds a new friend"
                    },
                    "500": {
                        "description": "Could not add a friend at least one of gender or name was not provided"
                    }
                }
            }
        },
        "/friends/filter": {
            "get": {
                "tags": [
                    "Friends filter service"
                ],
                "summary": "Get friend that correspond to a gender and / or letter of first name",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "This service returns the filtered friends"
                    },
                    "404": {
                        "description": "The service did not find any friends matching the provided filters"
                    }
                }
            }
        },
        "/friends/info": {
            "get": {
                "tags": [
                    "Header request info service"
                ],
                "summary": "Get information about the request header",
                "parameters": []
            }
        },
        "/friends/:id": {
            "get": {
                "tags": [
                    "Get friend from id service"
                ],
                "summary": "Try and get the friend corresponsing to the id from server",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "This service returns a friend given an id number from the server"
                    },
                    "404": {
                        "description": "The provided id doesn't exist in the server"
                    }
                }
            },
            "put": {
                "tags": [
                    "Update friend from id service"
                ],
                "summary": "Update details about an existing friend in the server",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successfully updated the target friend"
                    },
                    "404": {
                        "description": "Could not find the provided id number and did nothing"
                    }
                }
            }
        },
        "schemes": [
            "http"
        ],
        "consumes": [
            "application/json"
        ],
        "produces": [
            "application/json"
        ]
    }
}